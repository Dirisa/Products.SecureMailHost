General:

- Include help templates that explain what the different parts do, how
  a FAQ differs from a howto, differs from a Tutorial etc.

- Consider having an "Important" marker on entries, to mark the most
  common ones visually with a red (!) marker in the overview/listing.

  - I think we can/should generalize this more: add a ImportanceVocab
    list to help center for list of importance raitings, ie,
    ('Important','Normal') Then folder skins can just sort based on
    the order that things are listed in the importance ratings, and
    add the red bang to the top-level ones. This gives us more
    flexibility for future importance ratings. [Joel]

- Everything has to use portal_factory

  - Add a "USE_PORTAL_FACTORY" in config.py and change Install.py to
    install things into PF.

- We should have an extra attribute that has additional words that are
  indexed along with the content - for example in a howto about
  VerboseSecurity, it would make sense to have:

  - Verbose Security

  - Insufficient Privileges (the Plone Error Message)

  - Debugging security problems

  - etc...

- Integrate with the ratings tool

  - Being developed as a separate product.

- Make it easier to choose which subcomponents get installed. For
  example, put a simple textual list in config.py of the folderish
  products, and have types/init.py, Install.py, and
  HelpCenter.py/__init__ respect this. Easier for other people who
  want to use product but might not want all parts.

Permissions:

- Right now, both container-folders (ie FAQFolder) and contentishy
  things (ie FAQ) both use AddPortalContent and the same workflow.
  So users can both add FAQs and add FAQFolders, which is wrong.
  We can either change them into two workflows or add a new permission
  to separate out adding a help-content type. Joel votes for the 
  latter.

I18n:

- Some initial stuff has been put into to many types, but not always
  consistently. Can someone very familiar with i18n step up here?


Versions:

- Add UI to folder screens to only show content for selected versions.
  Alllows Plone 1.0 people,for example, to see only stuff pertaining
  to them.


Unit tests:

- We need some!


UI:

- Create icons for the folderish types (FAQFolder, etc.) that combine a folder
  with the FAQ icon.

