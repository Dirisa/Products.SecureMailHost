Remaining to do:

General:

- Include help templates that explain what the different parts do, how
  a FAQ differs from a howto, differs from a Tutorial etc.

- Search needs to be hooked up! It should allow searching on all the different
  types. Almost done, it doesn't search the Glossary at the moment, it seems.
  (limi)

- Make it easier to choose which subcomponents get installed. For
  example, put a simple textual list in config.py of the folderish
  products, and have types/init.py, Install.py, and
  HelpCenter.py/__init__ respect this. Easier for other people who
  want to use product but might not want all parts.

- There is something wrong with the permissions somehow - items that
  are "in-progress" are visible in the listings - they do not show
  up on the main page, though. The correct behaviour is that it should
  not show up for people who don't have the permission to see them
  (ie. Anon, Member) until they are published. "In-progress" and 
  "Pending" should both only be visible to Owner, Manager and in the
  case of "Pending" - also to the Reviewer role.

- Description should be required, the listings make very little sense
  without this.

Workflow - specification (by limi, trying to capture the most important things :)

- The main Plone Help Center *Content* workflow has the following states:

  - In-progress [Only Owner + Managers can View and Edit]
  
  - Pending [Owner can read but not edit, Managers/Reviewers approve]
  
  - Published [Everyone can view, Owner/Managers/Reviewers can Edit]

- Workflow mapping - This is the mapping to the different types:

  Plone Workflow -- PloneHelpCenter, 
                    FAQFolder, HowtoFolder, TutorialFolder, 
                    ErrorRefFolder, HelpLinkFolder, Glossary
                    
  Help Center Workflow -- FAQ, Howto, Tutorial,
                          ErrorReference, HelpLink, Definition
                          
  Not workflowed -- TutorialPage, Attachments

- Permissions:

  - Members can add FAQ, Howto, Tutorial, ErrorRef, HelpLink, Definition
  
  - They are in-progress by default, if they want to cooperate on these, they
    will need to assign local roles.
    
  - Owners are allowed to edit their docs while published. Requiring them to 
    retract content to update or fix, and then approve again is painful.
    Since the piece of documentation has already been approved by then, it's
    "proven" that it was good enough when it started, it doesn't need to be
    re-verified, in my opinion. Feel free to point out why I'm wrong. :)
    
  - Any logged in Member can add a new FAQ, Howto, Tutorial, ErrorRef, HelpLink
    and Definition, but only the owners of those objects can add the sub-objects
    like TutorialPages and Attachments.
    
  - Tutorial is treated as a *unit*, which is why we don't workflow the 
    TutorialPages. They should just be inheriting the permissions of their 
    container (Tutorial).
    
  - The same goes for HowTos, Attachments aren't workflowed.
  

- Notify! People need to be notified when somebody adds a comment to their item,
  so they can maintain and refine. The PloneHelpCenter concept will not work 
  without this, IMHO. (limi)


I18n:

- Some initial stuff has been put into to many types, but not always
  consistently. Can someone very familiar with i18n step up here?


Versions:

- Add UI to folder screens to only show content for selected versions.
  Alllows Plone 1.0 people,for example, to see only stuff pertaining
  to them. (limi)

- Also need a way to set the default view help-center-wide 
  (Example, let's say we just want to show Plone 2.0 elements 
   in the listings) (limi)


Unit tests:

- We need some!





DONE:

- Consider having an "Important" marker on entries, to mark the most
  common ones visually with a red (!) marker in the overview/listing.

  - I think we can/should generalize this more: add a ImportanceVocab
    list to help center for list of importance raitings, ie,
    ('Important','Normal') Then folder skins can just sort based on
    the order that things are listed in the importance ratings, and
    add the red bang to the top-level ones. This gives us more
    flexibility for future importance ratings. [Joel]

  - I have added an importance field to all the content schema.  The vocabulary
    is defined in config.py.  [Geoff]

- We should have an extra attribute that has additional words that are
  indexed along with the content - for example in a howto about
  VerboseSecurity, it would make sense to have:

  - Verbose Security

  - Insufficient Privileges (the Plone Error Message)

  - Debugging security problems

  - etc...

  - I have added a related_keywords field to all the content schemata.  The
    contents get indexed along with the rest of the item's searchable text. 
    [Geoff]

- Integrate with the ratings tool

  - Being developed as a separate product.

- Add simple Glossary type, with Glossary entries (already added by limi)

  - I admit that it's 50% because we have 5 and not 6 different
    types now, which makes everything asymmetrical. ;)

  - I still think it could be useful though - say; define what an
    action is, have an Archetypes section with stuff like
    Schema, Schemata, they are referencable from other docs.
    Makes a nice print-out for newbies too. :)

  - Simple container folder, like the others - with Sections

  - Super-simple object that is essentially a definition list

  - No item-level rendering is really necessary, but anchors are
    important. Everything can probably be on one page if anchors
    are included, and visible as bookmarkable links.

  - Advanced-level functionality (pie-in-the-sky) is automatic 
    parsing of abbr tags to look in the glossary for entries.
    (not realistic at this stage, just a fun thought :) - lots
    of academic institutions would like something like this, with
    proper integration in Kupu it could be killer functionality. :)
