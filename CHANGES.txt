0.6.0 (unstable)

beta1
	- added 'MD5only' mode and 'redir' output to updateMD5Metadatum()

   - eliminated unnecessary 'editMetadata' action from __call__()
   
   - added metadata edit link for subfolders in plfng_view.pt
   
   - added setRevision() and setChecksum() utility methods to FileProxy;
     and invoke them in _createProxy()

alpha9
	- removed unnecessary REQUEST param from the following methods:
		* getFileRealPath()
		* getFileMetadata()
		* setFileMetadata()
		* updateMD5Metadatum()
		* HTMLFormUploadFile()
		* validFolder()
	
	- added _getFSBasePath() and _getFSFullPath() 'gatekeeper' methods to 
	  consolidate all accesses to the local directory field (self.folder) of 
	  PLFNG instances. Rewrote all PLFNG methods to use these new methods.
	  (hopefully, this resolves SF bug #1024187, and then some!)

alpha8
	- view() method added in response to SF bug #1020213
	  (good catch, Marcel!)
	  
	- use zpublisher iterator to stream files back instead of manually doing it
	  (kudos, Alan!)  
	
	- all lines in PloneLocalFolderNG.py are now <= 80 characters long
	  (thx for the needed prompt, Alan!)
	
	- contentValues() method added by Alan Runyan for Kupu support
	
	- some unit tests were added by Alan Runyan
	
	- added language = 'neutral' metadata to support LinguaPlone
	  (kudos, Radim)

alpha7
  - small bugfix in catalogFSContent()
  
  - fixed bug wrt case-sensitive filenames causing mimetypes_registry.classify()
    to incorrectly classify with uppercase extensions (eg sample.JPG)

  - (kudos to Radim!) improved testPLFNGContentsCataloging.py unit code:
    
    * bugfix + support for INSTANCE_HOME in addition to SOFTWARE_HOME installations
    * added ID index to test catalog; added some catalog search capability.  

  - (kudos again to Radim!) added 'title' capability to PLFNG file contents
    via .metadata persistance layer
    
  - setFileMetadata() now takes params as lists to support multiple metadatum
    updating via single call  
    

alpha6
  - added addFile() method to support non-web file addition 
    (this logic was mostly taken from HTMLFormUploadFile(), which
     now calls addFile() to do its job)

  - added 'diagnostics' tab, with following associated changes:
  
    * added getFilteredOutContents()
  
    * getFilteredOutFSItems() now returns 4 lists instead of 3
      (illegalFilesList + illegalFoldersList vs illegalItemsList)
  

alpha5
  - major spring cleaning!
     
     * added getFilteredFSItems() method to util.py
       to centralize file/folder filtering and all 
       calls to os.listdir()
     
     * catalogContents() no longer returns # files not cataloged
     
     * removed the following unnecessary methods: 
		    quota_aware(),requireUploadMD5(),fileUnpackingAllowed() 
		    catalogingEnabled(),folderAddressDisplayStyle() 

     * removed many unnecessary imports
     
     * renamed upload_file() as HTMLFormUploadFile()
     
     * slightly improved plfng_catalog.pt 
         - eliminated warning message
         - pseudo button look for 'catalog contents now' link

alpha4
  - relocated FileProxy class to its own file

  - relocated main cataloging logic to catalogFSContent() util.py method
    to facilitate non-web invokation

alpha3
  - added and using checkValidId() method to prevent illegal filenames 
    from being listed, uploaded or unzipped into PLFNG containers.  
    
  - added configurable 'hide filter' for both files and folders to
    listFolderContents() method

  - added basic try/except handling for os.listdir() calls
    that throw permission denied exceptions by the OS.
    (per collective bug #1006379, #1005502)
  
alpha2
  - unzip support improvements
     * eliminated requirement for external unzip utility.
       
     * added backup support for existing files that get
       overwritten by unzip action

alpha1
  - MD5 support improvements:

     * eliminated requirement for external MD5 checksum generation utility.
       (PLFNG now optionally supports external MD5 utilities such as MD5Deep)

     * added validator to verify proper functioning of optional external MD5
       generator when configured for use with a PLFNG instance.

     * file metadata view/edit page (plfng_editMetadata.pt) now supports
       on-demand checking and/or setting/updating of MD5 metadatum


0.50 (released)

  - added TextIndexNG2-based portal catalog indexing of PLFNG contents
     - including configurable ability to specify file types NOT to index

  - added integrity checking for uploaded zip'd files

  - added optional ability to unzip ('unpack' action) zip'd files on server filesystem

  - added optional MD5 checksum verification support for file uploads

  - added optional file space quota limit enforcement (for both upload and unpack actions)

  - generalized .metadata implementation to use ConfigParser

  - added the following .metadata information to the original 'changes' metadata
  	 - md5 (server-generated MD5 checksum for file)
  	 - source (ID of authenticated member who uploaded the file)
  	 - unpacked_size (size in bytes of the unpacked contents of the packed file)

  - fixed URL backslash bug in __call__() causing grief for Mozilla browsers
  
  - added file and folder delete capability
  
  - added optional support for file 'hit counting' via mxmCounter product
  
  - added primitive unit testing of PLFNG instance with catalog action
  
  - various fixes to plfng_view.pt: (eg, removed download action for folders;
    Modified column now displays date AND time) 
  
  - added capability view file metadata and edit comments metadata
  
  - added 'up one level' link on plfng_view page
  
  - added optional support for archiving old revisions of files
   (eg, place copy of file into a backup folder when file
    when a new revision of an existing file is uploaded, or when a file is deleted)


0.4

  - added support to create directories
 
  - added methods to get various container size and properties info 

0.3:

  - comment for uploaded files are now displayed

0.2

  - add traversal support

  - some adjustments for virtual hosting

  - support for http upload

0.1
    
  - initial release 
