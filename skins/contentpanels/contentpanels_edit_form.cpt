<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
      lang="en-US"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">

<body>
<div metal:fill-slot="main" 
     tal:define="errors python:request.get('errors', {})">
        
    <h1 i18n:translate="heading_edit_item">
    Edit
        <span i18n:name="itemtype">
              <span i18n:translate=""         
                    tal:content="python:here.getTypeInfo().Title()" 
                    tal:omit-tag="">Item type</span>
        </span> 
    </h1>
    
    <p i18n:translate="description_edit_contentpanels" i18n:domain="contentpanels">
ContentPanels is designed to build a complex view out of a combination of portlets.  Various types of portlets for various types of contents (Document, Image, Folder, Topic, ZWiki Page, etc) can be combined in a single page. Enter the relevant details below, and press 'Save'. You can use the 'Layout' tab to configure pages/columns/panels
    </p>

   <form name="edit_form"
         action="."
         method="post"
         tal:attributes="action string:${here/getId}/${template/getId}" >

    <fieldset>

     <legend i18n:translate="legend_contentpanels_details" i18n:domain="contentpanels">ContentPanels Details</legend>

     <div class="field"
          tal:condition="python:member.getProperty('visible_ids', None)"
          tal:define="error errors/id | nothing;
          id python:request.get('id', test(here.show_id(),here.getId(),''));"
          tal:attributes="class python:test(error, 'field error', 'field')">

      <label for="id" i18n:translate="label_short_name">Short Name</label>

      <div class="formHelp" i18n:translate="help_shortname">
       Should not contain spaces, underscores or mixed case.
       Short Name is part of the document's web address.
      </div>

      <div tal:content="error">Validation error output</div>

      <input type="text"
             id="id"
             name="id"
             value=""
             size="40"
             tabindex=""
             tal:attributes="value id;
             tabindex tabindex/next;"
             />

     </div>

     <input type="hidden"
            name="id"
            tal:condition="python:not member.getProperty('visible_ids', '')"
            tal:attributes="value python:request.get('id', here.getId())"
            />

     <div class="field"
          tal:define="error errors/title|nothing;
          Title request/title | here/Title;"
          tal:attributes="class python:test(error, 'field error', 'field')">

      <label for="title" i18n:translate="label_title">Title</label>
      <div tal:content="error">Validation error output</div>

      <input type="text"
             id="title"
             name="title"
             value=""
             size="40"
             tabindex=""
             tal:attributes="value Title;
             tabindex tabindex/next;"
             />

     </div>

     <div class="field"
          tal:define="description request/description | here/Description ">

      <label for="description" i18n:translate="label_description">Description</label>

      <div class="formHelp" i18n:translate="help_description">
       A brief description of the document.
      </div>

      <textarea cols="80"
                rows="5"
                tabindex=""
                id="description"
                name="description"
                tal:content="description"
                tal:attributes="tabindex tabindex/next;"
                >
       Description
      </textarea>
     </div>

     <div class="field"
          tal:define="customCSS request/customCSS | here/getCustomCSS ">

      <label for="customCSS" i18n:translate="label_custom_css"  i18n:domain="contentpanels">custom CSS</label>

      <div class="formHelp" i18n:translate="help_custom_css"  i18n:domain="contentpanels">
        You can define custom CSS for this contentpanels here. Leave it blank if you don't know about CSS.
      </div>

      <textarea cols="80"
                rows="5"
                tabindex=""
                id="customCSS"
                name="customCSS"
                tal:content="customCSS"
                tal:attributes="tabindex tabindex/next;"
                >
       customCSS
      </textarea>
     </div>

     <div class="field">
      <label i18n:translate=""  i18n:domain="contentpanels">page layout mode</label>

      <div class="formHelp" i18n:translate="help_page_layout" i18n:domain="contentpanels">
         You can choose 'tile mode' or 'tab mode'. With 'tile mode', all pages are shown directly as rows. 
         It is useful for you to make very complex composite page. With 'tab mode', you can switch pages using
         the top-right tab links.
      </div>

      <select name="pageLayoutMode" tal:define="pageLayoutMode here/getPageLayoutMode">
         <option value="tile"
                 tal:attributes="selected python:pageLayoutMode == 'tile'">
                 tile mode</option>
         <option value="tab"
                 tal:attributes="selected python:pageLayoutMode == 'tab'">
                 tab mode</option>
      </select>
     </div>


     <div class="field">
      <label i18n:translate=""  i18n:domain="contentpanels">left/right portlets</label>

      <div class="formHelp" i18n:translate="help_portlet_pos" i18n:domain="contentpanels">
        You can set this contentpanels as the left or right column of the template.
      </div>

      <select name="portletsPos" tal:define="pos here/getPortletsPos">
         <option value="none" 
                 tal:attributes="selected python:pos == 'none'">
                 none</option>
         <option value="left_slots"
                 tal:attributes="selected python:pos == 'left_slots'">
                 set to left</option>
         <option value="right_slots"
                 tal:attributes="selected python:pos == 'right_slots'">
                 set to right</option>
      </select>
     </div>

     <div class="formControls"
          tal:define="process_creation request/process_creation|nothing;">
      <input class="context"
             tabindex=""
             type="submit"
             name="form.button.Save"
             value="Save"
             i18n:attributes="value"
             tal:attributes="tabindex tabindex/next;" />
     </div>

    </fieldset>

    <input type="hidden" name="form.submitted" value="1" />

  </form>
</div>
</body>
</html>
