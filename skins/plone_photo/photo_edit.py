## Script (Python) "photo_edit"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=precondition='', field_file='', field_id='', title=None, description=None
##title=Edit a photo
##
qst='portal_status_message=Photo+changed.'
REQUEST=context.REQUEST
file=field_file
id=field_id

context.manage_editPhoto(file=file)

errors=context.validate_image_edit()
if errors:
    form=getattr( context, context.getTypeInfo().getActionById( 'edit' ) )
    return form()

if file.filename and context.isIDAutoGenerated(id):
    if file.filename.find('\\') > -1: #winXX      
        id=file.filename.split('\\')[-1]
    else:
        id=file.filename.split('/')[-1]

     # strips extensions
     # if id.find('.')>-1: id=id[:id.find('.')] 

if not context.isIDAutoGenerated(id): 
    context.REQUEST.set('id', id)

if hasattr(context, 'extended_edit'):
    REQUEST.set('portal_status_message', 'Photo+changed.')
    edit_hook=getattr(context,'extended_edit')
    response=edit_hook(redirect=0)
    if response:
        return response

target_action = context.getTypeInfo().getActionById( 'view' )

context.REQUEST.RESPONSE.redirect( '%s/%s?%s' % ( context.absolute_url()
                                                , target_action
                                                , qst
                                                ) )



