<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
      lang="en-US" metal:define-macro="master">

<metal:block tal:define="global folderishView python: template.getId() in ('folder_listing', )" 
             tal:condition="folderishView">
    <tal:block tal:define="global actions python:here.portal_actions.listFilteredActionsFor(container)" />
</metal:block>
<metal:block tal:condition="not: folderishView">
    <tal:block tal:define="global actions python:here.portal_actions.listFilteredActionsFor(here)" />
</metal:block>

<head metal:use-macro="here/header/macros/html_header">
  <metal:block metal:fill-slot="head_slot">
    <META HTTP-EQUIV="pragma" CONTENT="no-cache">
    <metal:block tal:define="dummy python:request.RESPONSE.setHeader('pragma', 'no-cache')" />
    <metal:block metal:define-slot="head_slot" tal:replace="nothing" />
  </metal:block>
  
</head>

<body style="margin:1em;">

    <div metal:define-macro="photos"
                     tal:define="photos python:here.contentValues(spec='Portal Photo');
                     start request/start|python:0;
                     batch python:modules['ZTUtils'].Batch(photos, size=1, start=start);
                     previous python:batch.previous;
                     next python:batch.next;">

        <div tal:repeat="image batch">

            <div class="contentHeader">
            <h1 tal:content="image/title_or_id">Title or id</h1>
            </div>
   
            <img tal:condition="image/size"
                 src="#" 
                 tal:attributes="src python:image.absolute_url()+'?display='+request.get('display', 'original')" />

        
            <span class="description" tal:content="structure image/Description">
            Description
            </span>
        </div>

        <META tal:condition="next" HTTP-EQUIV=Refresh tal:attributes="CONTENT string:${request/delay};; URL=${request/URL0}?start:int=${next/first}&delay=${request/delay}">

        <META tal:condition="not:next" HTTP-EQUIV=Refresh tal:attributes="CONTENT string:${request/delay};; URL=${request/URL1}/photofolder_slideshow_end">

    </div>

</body>
</html>
