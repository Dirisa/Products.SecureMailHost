#------------------------------------------------------------------------------
# Name:         schema.py
# Purpose:      The AT's Schema information for PloneFormMailer
#
# Author:       Jens Klein <jens.klein@jensquadrat.de>
# generated by: ArchGenXML Version 0.9.14 http://sf.net/projects/archetypes/
#
# RCS-ID:       $Id: schema.py,v 1.2 2004/08/12 12:21:10 yenzenz Exp $
# Copyright:    (c) 2004 by jens quadrat GbR, Germany
# Licence:      GNU General Public Licence (GPL) Version 2 or later
#------------------------------------------------------------------------------

from Products.Archetypes.public import *
from config import *

PFMschema=BaseSchema  + Schema((
    #name of the recipient
    StringField('recipient_name',
        widget=StringWidget(description = 'The full name of the recipient '
            'of the mailed form. TALES Expression. If you don\'t know '
            'TALES expressions just enter string:YOURTEXT.',
            description_msgid = "help_formmailer_recipient_fullname",
            label = 'Recipient\'s full name',
            label_msgid = "label_formmailer_recipient_fullname",                 
        ),
        validators=('talesvalidator',),
        schemata='Mail Header',
        required=1,
    ),
    
    #e-mail adress of the recipient of the form-data
    StringField('recipient_email',
        widget=StringWidget(description = 'The recipients e-mail address. '
            'TALES Expression. If you don\'t know TALES expressions just '
            'enter string:YOURTEXT.',
            description_msgid = "help_formmailer_recipient_email",
            label = 'Recipient\'s e-mail address',
            label_msgid = "label_formmailer_recipient_email",                 
        ),                                
        schemata='Mail Header',
        validators=('talesvalidator',),
        required=1
    ),

    #additional recipients email-adresses by CC
    LinesField('cc_recipients',
        widget=LinesWidget(
            description = 'E-mail addresses which receive a carbon copy. '
            'TALES Expression. If you don\'t know TALES expressions just '
            'enter string:YOURTEXT.',
            description_msgid = "help_formmailer_cc_recipients",
            label = 'Cc recipients',
            label_msgid = "label_formmailer_cc_recipients",
        ),
        schemata='Mail Header',
        validators=('talesvalidator',)                   
    ),
    
    
    #additional recipients email-adresses by BCC
    LinesField('bcc_recipients',
        widget=LinesWidget(
            description = 'E-mail addresses which receive a blind carbon copy. '
            'TALES Expression. If you don\'t know TALES expressions just '
            'enter string:YOURTEXT.',
            description_msgid = "help_formmailer_bcc_recipients",
            label = 'Bcc recipients',
            label_msgid = "label_formmailer_bcc_recipients",
        ),
        schemata='Mail Header',
        validators=('talesvalidator',)
    ),
    
    #header lines in formatting KEY: VALUE
    LinesField('additional_headers',
        widget=LinesWidget(description = 'Additional e-mail-header lines. '
            'Only fill in if you aware of RFC822.',
            description_msgid = "help_formmailer_additional_headers",
            label = 'Additional headers',
                label_msgid = "label_formmailer_additional_headers",
        ),                                
        schemata='Mail Header'
    ),
    
    #subject of the message
    StringField('subject',
        default = default_mailtemplate_subject,
        widget=StringWidget(description = 'Subject line of message. '
            'TALES Expression. If you don\'t know TALES expressions just '
            'enter string:YOURTEXT.',
            description_msgid = "help_formmailer_subject",
            label = 'Subject',
            label_msgid = "label_formmailer_subject",                 
        ),                                
        validators=('talesvalidator',),
        schemata='Mail Message'
    ),
    
    #text introduces the body before field-listing starts
    TextField('body_pre',
        widget=TextAreaWidget(description = 'Text prepended to fields listed '
            'in mail-body',
            description_msgid = "help_formmailer_body_pre",
            label = 'Body (prepended)',
            label_msgid = "label_formmailer_body_pre",
        ),
        schemata='Mail Message'
    ),

    #text in e-mail after field list
    TextField('body_post',
        widget=TextAreaWidget(description = 'Text appended to fields listed '
            'in mail-body',
            description_msgid = "help_formmailer_body_post",
            label = 'Body (appended)',
            label_msgid = "label_formmailer_body_post",
        ),
        schemata='Mail Message'
    ),

    #text used as the footer of e-mail (do not include delimiter)
    TextField('body_footer',
        widget=TextAreaWidget(description = 'Text used as the footer at '
            'bottom, delimited from the body by a dashed line.',
            description_msgid = "help_formmailer_body_footer",
            label = 'Body (footer)',
            label_msgid = "label_formmailer_body_footer",
        ),
                            
        schemata='Mail Message'
    ),

    #text introduces the body before field-listing starts
    TextField('body_pt',
        default = default_mailtemplate_body, 
        default_content_type='application/xml+xhtml',
        default_output_type='text/plain',
        widget=TextAreaWidget(description = 'This is a Zope Page Template '
            'used for rendering of the mail-body. You don\'t need to modify '
            'it, but if you know TAL (Zope\'s Template Attribute Language) '
            'you have the full power to customize your outgoing mails.',
            description_msgid = "help_formmailer_body_pt",
            label = 'Mail-Body Template',
            label_msgid = "label_formmailer_body_pt",
            rows = 30,
        ),
        validators=('zptvalidator',),
        schemata='Template'
    ),        
    
##        #strip html?
##        BooleanField('body_pt_striphtml',
##            default = 0,
##            widget=BooleanWidget(description = 'Strip HTML tags from rendered '
##                'mail template. ',
##                description_msgid = "help_formmailer_body_pt_strip",
##                label = 'Strip HTML?',
##                label_msgid = "label_formmailer_body_pt_strip",
##            ),
##            schemata='Template'
##        ),                
    
    #text prepended to list of fields
    TextField('form_pre',
        widget=RichWidget(description = "Text prepended to the web-form.",
            description_msgid = "help_formmailer_form_pre",
            label = "Text (prepended)",
            label_msgid = "label_formmailer_form_pre",
            rows = 12
        ),
        default_content_type='text/structured',
        allowable_content_types=('text/structured',
                                'text/restructured',
                                'text/html',
                                'text/plain'),
        schemata='Form',
        default_output_type='text/html'
    ),
    #text appended to list of fields
    TextField('form_post',
        widget=TextAreaWidget(description = "Text appended to the web-form.",
            description_msgid = "help_formmailer_form_post",
            label = "Text (appended)",
            label_msgid = "label_formmailer_form_post",
            rows = 12),                                
        default_content_type='text/structured',
        allowable_content_types=('text/structured',
                                'text/restructured',
                                'text/html',
                                'text/plain'),
        schemata='Form',
        default_output_type='text/html'
    ),

    
    #label for send button
    LinesField('form_buttons',
        widget=LinesWidget(description = 'Definition of the buttons. '
            'format: value|name|type|css-class.',
            description_msgid = "help_formmailer_form_buttons",
            label = 'Buttons',
            label_msgid = "label_formmailer_form_button_submit",                 
        ),
        default=("""Submit|submit|submit|context""",
                 """Reset|reset|reset|standalone"""),
        schemata='Form',
        required=1,

    ),
    #gpg key-id
    StringField('gpg_keyid',
        widget=StringWidget(description = 'Give your key-id, e-mail or '
            'whatever works to match a public key from current keyring. '
            'It will be used to encrypt the '
            'message body. You need to have a working "GNU Privacy Guard" binary '
            'installed on the machine running zope! Test this feature before going public!',
            description_msgid = "help_formmailer_key_id",
            label = 'Key-Id',
            label_msgid = "label_formmailer_key_id",                 
        ),                                
        schemata='Encryption'
    ),        
    
##        #gpg keyserver
##        StringField('gpg_keyserver',
##            widget=StringWidget(description = 'Name a Keyserver, where the '
##                'above key can be found. Not needed if it is already in current'
##                'keyring or a public key is given',
##                description_msgid = "help_formmailer_gpg_keyserver",
##                label = 'Keyserver',
##                label_msgid = "label_formmailer_gpg_keyserver",                 
##            ),                                
##            schemata='Encryption'
##        ),
##        
##
##        #gpg public key
##        TextField('gpg_public',
##            widget=TextAreaWidget(description = 'Paste your GPG/PGP public key in '
##                'here.',
##                description_msgid = "help_formmailer_gpg_public",
##                label = "Public Key",
##                label_msgid = "label_formmailer_gpg_public",
##                rows = 12),                                
##            default_content_type='text/plain',
##            allowable_content_types=('text/plain'),
##            schemata='Encryption',
##            default_output_type='text/html'
##        ),        
    
    #action to be executed after successful validation
    StringField('cpyaction',
        widget=StringWidget(description = 'Set an alternate controller '
            'python script (cpy). Change this setting only if you know '
            'exactly what you are doing. Leave it blank for default behaviour.',
            description_msgid = "help_formmailer_cpyaction",
            label = 'Controller Script',
            label_msgid = "label_formmailer_cpyaction",                 
        ),                                
        schemata='Controller'
    ),        
    
    #title of 'Sent Response'
    StringField('sent_title',
        widget=StringWidget(description = 'The title of the page displayed '
            'after successful sending. If left blank the primary title '
            'field is used.',
            description_msgid = "help_formmailer_sent_title",
            label = 'Title (sent page)',
            label_msgid = "label_formmailer_sent_title",                 
        ),
        schemata='Sent Response'
    ),
    
    #message for 'Sent Response'
    TextField('sent_message',
        widget=RichWidget(description = 'The message of the page displayed '
            'after successful sending.',
            description_msgid = "help_formmailer_sent_msg",
            label = 'Message (sent page)',
            label_msgid = "label_formmailer_sent_msg",                 
        ),                                
        default_content_type='text/structured',
        allowable_content_types=('text/structured',
                                'text/restructured',
                                'text/html',
                                'text/plain'),
        schemata='Sent Response',
        default_output_type='text/html'
    ),
    
    #ignore sent_title, sent_message and redirect to another page
    StringField('sent_redirect',
        widget=StringWidget(description = 'Redirect to a custom page '
            'is possible too (instead of standard sent page).'
            'TALES Expression. If you don\'t know TALES expressions just '
            'enter string:YOURTEXT.',
            description_msgid = "help_formmailer_sent_redirect",
            label = 'Redirect to (sent)',
            label_msgid = "label_formmailer_sent_redirect",                 
        ),                                
        validators=('talesvalidator',),
        schemata='Sent Response'
    ),
),
)
